########################################################################################################################
# Project specific settings
########################################################################################################################

[buildout]
find-links=${settings:find-links}
# extra directories to add to the python path
extra-paths+=
# better have mr.developer mananing your eggs, see sources.cfg
develop=src/makina.fixmystreet

eggs=makina.fixmystreet


[sources]
# see http://pypi.python.org/pypi/mr.developer for documentation
# better to edit ./sources.cfg

[scripts]
recipe=minitage.recipe.scripts
extra-paths+=${buildout:extra-paths}
    ${buildout:sources-dir}
    ${buildout:sources-dir}/fixmystreet
    ${buildout:sources-dir}/google_analytics
    ${buildout:sources-dir}/registration
    ${buildout:sources-dir}/social_auth
    ${buildout:sources-dir}/stdimage
    ${buildout:sources-dir}/transmeta

eggs+= ${buildout:eggs}
    z3c.checkversions

#Django
    Django
    PasteDeploy
    Paste
    cryptacular
    dj.paste
    WebOb
    WebError
    repoze.vhm
    CherryPy
    gunicorn
    psycopg2
    egenix-mx-base
#with_egg_transmeta
    django-transmeta
#with_database_postgresql
#with_tool_coverage
    coverage
#with_egg_djangostdimage
    django-stdimage
#with_egg_pyopenssl
    pyOpenSSL
#with_binding_pil
    PIL
#with_gis_gdal
    GDal
#with_gis_geopy
    geopy
#with_egg_djangosocialauth
#with_binding_lxml
    lxml
    elementtree
#with_binding_cairo
    pycairo
#with_tool_ipython
    ipython
#with_tool_bpython
    bpython
#with_egg_djangoregistration
#with_tool_nose
    nose
    django-social-auth
    django-registration
#custom
# Scripts generated filtering
scripts+=
#z3c.checkversions
    checkversions
#zope2
    paster
#with_tool_bpython
    bpython
#with_tool_nose
    nosetests
    nose
#with_tool_ipython
    ipython
    django-admin.py

entry-points=
# runner
    fixmystreet_manage=fixmystreet.manage:main


env-file=${buildout:directory}/etc/makina.fixmystreet.env
interpreter = djangopy
dependent-scripts=true
#paster-initialization=

[test]
recipe = zc.recipe.testrunner
eggs = ${scripts:eggs}
script = selftest

[omelette]
order=${scripts:recipe}
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
packages =${scripts:extra-paths}

# zope.testing testrunner support
[testenv]

# This testrunner is a zc.recipe.testrunner like
# See http://pypi.python.org/pypi/zc.recipe.testrunner/
# It can do xml reports addon if you supply -x as a command line argument
# It is useful for generating reports for hudson or other contineous integration
[makinafixmystreet.test]
recipe = collective.xmltestreport
eggs = ${scripts:eggs}
extra-paths = ${scripts:extra-paths}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']
environment = testenv

[instance]
recipe = collective.recipe.template
input =  ${buildout:directory}/etc/templates/wsgi/paster.ini.in
output = ${buildout:directory}/etc/wsgi/instance.ini
host=${hosts:instance}
port=${ports:instance}
# set here your project application wsgi application
egg=${settings:application}
ep=${instance:egg}
intercept_exc_debug=debug
debugtoolbar.eval_exc=true
debug=true

# vim:set ft=cfg:
